import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Load the dataset
file_path = 'Demographic and Spatial data - Data.csv'  # Ensure the file is in the same directory
df = pd.read_csv(file_path)

# Convert percentage columns to numeric values
for col in ['Non-Build-Up areas (%)', 'Build-Up areas (%)', 'Urban Percentage %', 'Rural Percentage %']:
    df[col] = df[col].str.rstrip('%').astype(float)

df.head()


# Plot the line charts and save as PNG
plt.figure(figsize=(10, 5))
plt.plot(df['Years'], df['Urban Percentage %'], label='Urban Percentage %', marker='o', linestyle='-')
plt.plot(df['Years'], df['Build-Up areas (%)'], label='Build-Up areas %', marker='s', linestyle='--')

plt.xlabel('Years')
plt.ylabel('Percentage (%)')
plt.title('Urban Percentage and Build-Up Area Over the Years')
plt.legend()
plt.grid(True)

plt.savefig("Urban_BuildUp_Chart.png", dpi=300, bbox_inches='tight')  # Save the chart as PNG
plt.show()

# Calculate R² between Urban Percentage and Build-Up Area Percentage
X = df['Build-Up areas (%)'].values.reshape(-1, 1)
y = df['Urban Percentage %'].values

model = LinearRegression()
model.fit(X, y)
y_pred = model.predict(X)
r2 = r2_score(y, y_pred)

print(f'R² Value: {r2:.4f}')

from IPython.display import FileLink

FileLink("Urban_BuildUp_Chart.png")
